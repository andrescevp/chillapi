# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
#      - id: check-yaml
#      - id: check-json
      - id: check-added-large-files
#      - id: pretty-format-json
      - id: debug-statements
      - id: detect-aws-credentials
      - id: mixed-line-ending
      - id: no-commit-to-branch
#      - id: requirements-txt-fixer
      - id: detect-private-key
  - repo: https://github.com/asottile/pyupgrade
    rev: v2.9.0
    hooks:
      - id: pyupgrade
        args: [ --py38-plus ]
  - repo: local
    hooks:
#      - id: requirements
#        name: requirements
#        language: system
#        entry: docker exec chillapi-api bash -c ". venv/bin/activate && venv/bin/pip freeze > requirements.txt && pipreqs --force chillapi/ && chown -Rf 1000:1000 requirements.txt && chown -Rf 1000:1000 chillapi/requirements.txt || true"
#        always_run: true
#        require_serial: true
#        types_or: [ python ]
      - id: black
        name: black
        language: system
        entry: docker exec chillapi-api bash -c "black -t py38 -q -l 150 chillapi/"
        always_run: true
        require_serial: true
        types_or: [ python ]
      - id: flake8
        name: flake8
        language: system
        entry: docker exec chillapi-api bash -c "flake8 --max-line-length 150 --max-complexity 15 chillapi"
        always_run: true
        require_serial: true
        types_or: [ python ]
      - id: test on docker
        name: test on docker
        language: system
        entry: docker exec chillapi-api bash -c "__CHILLAPI_SETUP_TESTING_DB_DSN__='postgresql://root:root@postgres/chillapi' python setup.py test"
        always_run: true
        require_serial: true
        types_or: [ python ]
      - id: fix_permissions
        name: fix_permissions
        language: system
        entry: docker exec chillapi-api chown -Rf 1000:1000 .
        always_run: true
        require_serial: true
        types_or: [ python ]
      - id: clean test build
        name: clean test build
        language: system
        entry: rm -Rf .eggs/ build/ chillapi.egg-info/ dist/
        always_run: true
        require_serial: true
        types_or: [ bash ]
      - id: test on local
        name: test on local
        language: system
        entry: python setup.py test
        always_run: true
        require_serial: true
        types_or: [ bash ]
      - id: clean test build 2
        name: clean test build 2
        language: system
        entry: rm -rf .eggs/ build/ chillapi.egg-info/ dist/
        always_run: true
        require_serial: true
        types_or: [ bash ]
      - id: fix_permissions
        name: fix_permissions
        language: system
        entry: docker exec chillapi-api chown -Rf 1000:1000 .
        always_run: true
        require_serial: true
        types_or: [ python ]
