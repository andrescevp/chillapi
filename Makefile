VENV_NAME?=venv
VENV_ACTIVATE=. ${VENV_NAME}/bin/activate
PYTHON=${VENV_NAME}/bin/python
DOCKER=docker exec -ti codebook-api
CURRENT_GIT_BRANCH := $(shell git rev-parse --abbrev-ref HEAD)
DB_REVISION_DESCRIPTION='autogenerated'
virtualenv:
	${DOCKER} virtualenv venv
run_dev:
	${DOCKER} sh -c "${VENV_ACTIVATE} && gunicorn --bind 127.0.0.1:8888 app:app"
pip_install:
	${DOCKER} sh -c "${VENV_ACTIVATE} && pip install ${LIBS}"
pip_uninstall:
	${DOCKER} sh -c "${VENV_ACTIVATE} && pip uninstall ${LIBS}"
pip_install_requirements:
	${DOCKER} sh -c "${VENV_ACTIVATE} && pip install -r requirements.txt"
pip_freeze_requirements:
	${DOCKER} sh -c "${VENV_ACTIVATE} && pip freeze > requirements.txt"
docker_exec:
	${DOCKER} ${CMD}
docker_fix_permissions:
	${DOCKER} chown -Rf 1000:1000 .
alembic_upgrade_redshift_db:
	${DOCKER} sh -c "alembic upgrade head && chown -Rf 1000:1000 ."
alembic_downgrade_redshift_db:
	${DOCKER} sh -c "alembic downgrade $(OPTS) && chown -Rf 1000:1000 ."
alembic_downgrade_last_redshift_db:
	${DOCKER} sh -c "alembic downgrade -1 && chown -Rf 1000:1000 ."
alembic_new_revision_redshift_db:
	${DOCKER} sh -c "alembic revision -m '${CURRENT_GIT_BRANCH}/${DB_REVISION_DESCRIPTION}' && chown -Rf 1000:1000 ."
